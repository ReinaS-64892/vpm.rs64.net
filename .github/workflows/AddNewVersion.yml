name: add-new-version
on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'repository choice'
        required: true
        default: 'TexTransTool'
        type: choice
        options:
          - TexTransTool
          - TTT-DestructiveTextureUtilities
          - TTT-WorldExtension
      tag:
        type: string
        required: true
        description: 'version tag string'

jobs:
  add-new-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: MoveToVar
        id: VPMRepoJson
        run: |
          Temp=`cat ./vpm.json`
          echo 'result=' $Temp >> "$GITHUB_OUTPUT"


      - name: Get NewVersion Data
        id: ReleaseData
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repo: ReinaS-64892/${{ github.event.inputs.repository }}
          tag: ${{ github.event.inputs.tag }}

      - name: Get ZipURL
        id: ZipURL
        uses: actions/github-script@v7
        env:
          Assets: ${{ steps.ReleaseData.outputs.assets }}
          Tag: ${{ github.event.inputs.tag }}
        with:
          result-encoding: string
          script: |
            const mod = await import("${{ github.workspace }}/.github/workflows/JsScripts/GetZipURL.js");
            return mod.Func();

      - name: GetPackageDotJson
        id: PackageDotJson
        uses: actions/github-script@v7
        env:
          Assets: ${{ steps.ReleaseData.outputs.assets }}
        with:
          result-encoding: string
          script: |
            const mod = await import("${{ github.workspace }}/.github/workflows/JsScripts/GetPackageDotJson.mjs");
            return await mod.Func();


      - name: Debug
        env:
          ZIP_URL: ${{ steps.ZipURL.outputs.result }}
          PACKAGE_JSON: ${{ steps.PackageDotJson.outputs.result }}
        run: |
          echo $ZIP_URL
          echo $PACKAGE_JSON


      - name: ReplacePackageURL
        id: ReplacedPackageJson
        uses: actions/github-script@v7
        env:
          PackageJson: ${{ steps.PackageDotJson.outputs.result }}
          ReplaceURL: ${{ steps.ZipURL.outputs.result }}
        with:
          result-encoding: string
          script: |
            const mod = await import("${{ github.workspace }}/.github/workflows/JsScripts/ReplacePackageURL.js");
            return mod.Func();

      - name: AddVPMDotJson
        id: AddedVPMDotJson
        uses: actions/github-script@v7
        env:
          VPMRepoJson: ${{ steps.VPMRepoJson.outputs.result }}
          AddPackageJson: ${{ steps.ReplacedPackageJson.outputs.result }}
        with:
          result-encoding: string
          script: |
            const mod = await import("${{ github.workspace }}/.github/workflows/JsScripts/AddToVPMRepo.js");
            return mod.Func();


      - name: Write Json
        env:
          VPM_JSON: ${{ steps.AddedVPMDotJson.outputs.result }}
        run: |
          rm  ./vpm.json
          echo $VPM_JSON >> ./vpm.json

      - name: git commit
        env:
          REPO: ${{ github.event.inputs.repository }}
          TAG: ${{ github.event.inputs.tag }}
        run: |
          git config user.name  "GitHub Action"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ./vpm.json
          git commit -m "Add $REPO New Version $TAG!"
          git push origin
